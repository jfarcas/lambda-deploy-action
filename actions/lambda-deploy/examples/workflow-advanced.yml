# Advanced GitHub Workflow for Lambda Deploy Action
# Full-featured workflow with rollback capabilities and multiple environments

name: Deploy Lambda Function (Advanced)

run-name: >-
  ${{
    github.event_name == 'workflow_dispatch' && inputs.rollback_version &&
    format('ðŸ”„ Rollback | {0} â†’ {1} | v{2}', github.actor, inputs.environment, inputs.rollback_version) ||
    github.event_name == 'workflow_dispatch' && 
    format('ðŸš€ Manual Deploy | {0} â†’ {1}', github.actor, inputs.environment) ||
    format('ðŸ“¦ Auto Deploy | {0}', github.ref_name)
  }}

on:
  push:
    branches: [main, feature/**]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options: [dev, pre, prod]
        default: 'dev'
      force-deploy:
        description: 'Force deployment (bypass version conflicts)'
        required: false
        type: boolean
        default: false
      rollback_version:
        description: 'Version to rollback to (leave empty for normal deployment)'
        required: false
        type: string
      debug:
        description: 'Enable debug output'
        required: false
        type: boolean
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'dev' }}
    permissions:
      id-token: write
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy or Rollback Lambda
        uses: YourOrg/github-actions-collection/actions/lambda-deploy@v1.0.0
        with:
          config-file: "lambda-deploy-config.yml"
          environment: ${{ inputs.environment || 'auto' }}
          force-deploy: ${{ inputs.force-deploy || false }}
          rollback-to-version: ${{ inputs.rollback_version }}
          debug: ${{ inputs.debug || false }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
      
      - name: Deployment Summary
        if: always()
        run: |
          echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ inputs.environment || 'auto' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          
          if [[ -n "${{ inputs.rollback_version }}" ]]; then
            echo "- **Action:** Rollback to v${{ inputs.rollback_version }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Action:** Normal deployment" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ inputs.force-deploy }}" == "true" ]]; then
            echo "- **Force Deploy:** Enabled" >> $GITHUB_STEP_SUMMARY
          fi
