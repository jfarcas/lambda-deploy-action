# .github/workflows/lambda-deploy.yml
# Repository workflow template for Lambda deployment using the generic action

name: Deploy Lambda Function

on:
  push:
    branches:
      - main
      - 'feature/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - pre
          - prod
      force_deploy:
        description: 'Force deployment'
        required: false
        default: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'dev' }}  # Required for environment-level secrets/variables
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Lambda Function
        uses: YourOrg/devops-actions/.github/actions/lambda-deploy@lambda-deploy/v1.0.0
        env:
          # Required repository variables (set in GitHub repository settings)
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
          
          # Required AWS credentials (set in GitHub repository settings)
          # For Access Key authentication:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
          # For OIDC authentication (alternative to access keys):
          # AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
          
          # Optional: Teams webhook for notifications
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        with:
          config-file: 'lambda-deploy-config.yml'
          environment: ${{ inputs.environment || 'auto' }}
          force-deploy: ${{ inputs.force_deploy || 'false' }}

      - name: Post-deployment actions
        if: success()
        run: |
          echo "‚úÖ Lambda deployment completed successfully"
          echo "üì¶ Function: ${{ vars.LAMBDA_FUNCTION_NAME }}"
          echo "üåç Region: ${{ vars.AWS_REGION }}"
