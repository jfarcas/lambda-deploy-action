# .github/workflows/lambda-rollback.yml
# Emergency rollback workflow for Lambda functions

name: Emergency Lambda Rollback

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for rollback'
        required: true
        type: choice
        options:
          - dev
          - pre
          - prod
      rollback_version:
        description: 'Version to rollback to (e.g., v1.2.3 or 1.2.3)'
        required: true
        type: string
      reason:
        description: 'Reason for rollback'
        required: true
        type: string
      debug:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  rollback:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Confirm Rollback
        run: |
          echo "üö® EMERGENCY ROLLBACK INITIATED"
          echo "Environment: ${{ inputs.environment }}"
          echo "Rollback to Version: ${{ inputs.rollback_version }}"
          echo "Reason: ${{ inputs.reason }}"
          echo "Initiated by: ${{ github.actor }}"
          echo ""
          echo "‚ö†Ô∏è  This will rollback the Lambda function to a previous version."
          echo "‚ö†Ô∏è  Make sure the target version exists in S3."

      - name: Rollback Lambda Function
        uses: YourOrg/devops-actions/.github/actions/lambda-deploy@lambda-deploy/v1.0.0
        env:
          # Required repository variables
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
          
          # Required AWS credentials
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
          
          # Optional: Teams webhook for notifications
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        with:
          config-file: 'lambda-deploy-config.yml'
          environment: ${{ inputs.environment }}
          rollback-to-version: ${{ inputs.rollback_version }}
          debug: ${{ inputs.debug }}

      - name: Rollback Summary
        if: success()
        run: |
          echo "‚úÖ ROLLBACK COMPLETED SUCCESSFULLY"
          echo "Environment: ${{ inputs.environment }}"
          echo "Rolled back to: ${{ inputs.rollback_version }}"
          echo "Reason: ${{ inputs.reason }}"
          echo ""
          echo "üîç Next steps:"
          echo "1. Verify the application is working correctly"
          echo "2. Investigate the issue that caused the rollback"
          echo "3. Plan a fix and new deployment"

      - name: Rollback Failed
        if: failure()
        run: |
          echo "‚ùå ROLLBACK FAILED"
          echo "Environment: ${{ inputs.environment }}"
          echo "Target version: ${{ inputs.rollback_version }}"
          echo ""
          echo "üö® IMMEDIATE ACTION REQUIRED:"
          echo "1. Check the workflow logs for errors"
          echo "2. Verify the target version exists in S3"
          echo "3. Consider manual rollback if necessary"
          echo "4. Contact the DevOps team immediately"
